-- FIND AVERAGE SALARY OF EACH DEPARTMENT
-- REMOVE THE NULL DEPARTMENT_ID FROM THE RESULT
SELECT DEPARTMENT_ID, ROUND(AVG(SALARY))
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NOT NULL
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) > 8000;
-- CONTINUE FROM ABOVE QUERY
-- ONLY DISPLAY THE RESULT IF AVERAGE SALARY IS MORE THAN 8000

-- LOWER, UPPER, LENGTH
-- FIND ALL UPPERCASE FIRST NAMES, LENGTH OF FIRST_NAME, LAST_NAME AND LENGTH OF FULL_NAME
-- SORT THE RESULT BY 3RD COLUMN
SELECT UPPER(FIRST_NAME),
       LENGTH(LAST_NAME),
       LENGTH(FIRST_NAME || LAST_NAME),
       FIRST_NAME || LAST_NAME AS "FULL NAME"
FROM EMPLOYEES
ORDER BY 3;

-- WHAT IF WE WANT TO GET EMPLOYEE FIRST_NAME AND DEPARTMENT NAME INSTEAD OF DEPARTMENT ID
-- FIRST NAME IS COMING FROM EMPLOYEES TABLE
-- DEPARTMENT_NAME IS COMING FROM DEPARTMENT TABLE
SELECT FIRST_NAME, DEPARTMENT_ID
FROM EMPLOYEES
WHERE FIRST_NAME = 'Steven' AND LAST_NAME = 'King';

-- USE ABOVE QUERY TO FIND OUT THE NAME OF DEPARTMENT
-- FIND OUT THE DEPARTMENT_NAME OF THE DEPARTMENT WITH ID OF 90
SELECT DEPARTMENT_ID, DEPARTMENT_NAME
FROM DEPARTMENTS
WHERE DEPARTMENT_ID = 90;

-- SQL JOIN
-- INNER JOIN RETURNS DATA THAT MATCHES FROM BOTH TABLES ACCORDING TO CONDITION
SELECT EMPLOYEES.FIRST_NAME, EMPLOYEES.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

-- SIMPLIFY ABOVE QUERY BY USING ALIAS
SELECT E.FIRST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E -- E HERE IS NICK NAME FOR EMPLOYEES TABLE
INNER JOIN DEPARTMENTS D on E.DEPARTMENT_ID = D.DEPARTMENT_ID -- FOREIGN KEY RELATIONSHIP

-- LEFT OUTER JOIN RETURNS EVERYTHING THAT MATCHES + THOSE THAT DID NOT MATCH FROM LEFT TABLE
SELECT E.FIRST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E -- E HERE IS NICK NAME FOR EMPLOYEES TABLE
LEFT OUTER JOIN DEPARTMENTS D on E.DEPARTMENT_ID = D.DEPARTMENT_ID -- FOREIGN KEY RELATIONSHIP